package moviesapp.controller.command_line;

import static moviesapp.controller.command_line.CLController.*;

public class CLCatalog extends CLSearch{

    /**
     * Display only the title, the year of release and the average note of every film in the catalog (popular films generated by API)
     */
    public void catalogCommand(){
        apiObject.popularMovies("1");
        do{
            jsonReaderUpdate();
            System.out.println("The most popular movies at the moment are listed below: \n" + jsonReader.findAllMovies());
        } while(askPreviousOrNextPage(messageOfAskPreviousOrNextPage()));
    }

    /**
     * Ask the user to select an interaction with page management system (previous, next, stop)
     * @param message the message to print to the user to interact with page management system
     * @return {@code true} if the user select something else than stopping the page management system
     */
    private boolean askPreviousOrNextPage(String message){
        String response = askValue(message);

        switch (response) {
            case "3" -> {
                int pageNumber = Integer.parseInt(askValue("Enter page number: "));
                if (pageNumber >= 1 && pageNumber <= jsonReader.numberOfPagesOfMoviesInJson()){
                    apiObject.popularMovies(String.valueOf(pageNumber));
                    System.out.println();
                    return true;
                }
                System.out.println("\n| Page number unavailable.");
            }
            case "2" -> {
                if(jsonReader.getPageInJson() < jsonReader.numberOfPagesOfMoviesInJson()){
                    apiObject.popularMovies( String.valueOf(jsonReader.getPageInJson() + 1));
                    System.out.println();
                    return true;
                }
                System.out.println("\n| There is no next page.");
            }
            case "1" -> {
                if(jsonReader.getPageInJson() > 1){
                    apiObject.popularMovies(String.valueOf(jsonReader.getPageInJson() - 1));
                    System.out.println();
                    return true;
                }
                System.out.println("\n| There is no precedent page.");
            }
            case "0" -> {
                return false;
            }
            default -> System.out.println("\n| Please enter a valid option.");
        }

        return askPreviousOrNextPage(message);
    }
}
